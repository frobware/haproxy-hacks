#!/usr/bin/env bash

thisdir="$(cd $(dirname "${BASH_SOURCE[0]}") && pwd -P)"

set -u
set -o pipefail

results_file=${1:?}

t=$(mktemp)
awk '{ print $1, $2, $4, $6, $8, $10, $12, $14, $16 }' $results_file > $t

$thisdir/sqlite3 <<EOF
.load $thisdir/histograms.so

CREATE TABLE results (id INTEGER PRIMARY KEY,
	timestamp TEXT,
	time_namelookup REAL,
	time_connect REAL,
	time_pretransfer REAL,
	time_starttransfer REAL,
	http_code INTEGER,
	port INTEGER,
	time_total REAL);
.separator " "
.import $t results
.headers on
.mode column
SELECT *
FROM results
WHERE time_${3:-total} >= ${2:-0.100};
EOF

for i in namelookup connect pretransfer starttransfer; do
    echo
    $thisdir/sqlite3 <<EOF
.load $thisdir/histograms
CREATE TABLE results (id INTEGER PRIMARY KEY,
	timestamp TEXT,
	time_namelookup REAL,
	time_connect REAL,
	time_pretransfer REAL,
	time_starttransfer REAL,
	http_code INTEGER,
	port INTEGER,
	time_total REAL);
.separator " "
.import $t results
.headers on
.mode column
SELECT CAST(Min(time_$i) * 1000 AS INTEGER) AS "MIN-$i(ms)",
       CAST(Max(time_$i) * 1000 AS INTEGER) AS "MAX-$i(ms)",
       CAST(Avg(time_$i) * 1000 AS INTEGER) AS "AVG-$i(ms)"
FROM   results;
EOF
done

for i in namelookup connect pretransfer starttransfer total; do
    echo
    $thisdir/sqlite3 <<EOF
.load $thisdir/histograms
CREATE TABLE results (id INTEGER PRIMARY KEY,
	timestamp TEXT,
	time_namelookup REAL,
	time_connect REAL,
	time_pretransfer REAL,
	time_starttransfer REAL,
	http_code INTEGER,
	port INTEGER,
	time_total REAL);
.separator " "
.import $t results
.headers on
.mode column

SELECT CAST(histo.bin * 1000 AS INTEGER) as "bin-$i(ms)",
       histo.bincount,
       histo.accumcount,
       Cast(Sum(bincount)
	      OVER (
		ORDER BY accumcount) / Cast((SELECT Count(time_$i)
					     FROM   results) AS REAL) * 100.0 AS
	    INTEGER)        AS "acccum%age"
FROM   Histo("results", "time_$i", ${NBINS:-10}, 0,
					     (SELECT Max(time_$i)
						FROM results) + 0.0001);

select count(*) from results
where http_code != 200;

EOF
done

rm -f "$t"
