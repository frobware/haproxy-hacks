global
  maxconn 2000
  daemon
  log 127.0.0.1:514 local0 debug
  nbthread 1
  server-state-file /var/tmp/haproxy/run/haproxy.state
  stats socket /var/tmp/haproxy/run/haproxy.sock mode 600 level admin expose-fd listeners
  tune.ssl.default-dh-param 2048

defaults
  # Long timeout for WebSocket connections.
  errorfile 503 503.http

  timeout connect 5s
  timeout client 30s
  timeout client-fin 1s
  timeout server 30s
  timeout server-fin 1s
  timeout http-request 10s
  timeout http-keep-alive 300s

  option log-health-checks
# option tcplog
  
frontend public
  #option logasap
  bind :8080
  mode http
  tcp-request inspect-delay 5s
  tcp-request content accept if HTTP
  monitor-uri /_______internal_router_healthz
  http-request del-header Proxy
  http-request set-header Host %[req.hdr(Host),lower]
  acl secure_redirect base,map_reg(os_route_http_redirect.map) -m found
  redirect scheme https if secure_redirect
  use_backend %[base,map_reg(os_http_be.map)]
  default_backend openshift_default

frontend public_ssl
  bind :8443
  tcp-request inspect-delay 5s
  tcp-request content accept if { req_ssl_hello_type 1 }
  acl sni req.ssl_sni -m found
  acl sni_passthrough req.ssl_sni,lower,map_reg(os_sni_passthrough.map) -m found
  use_backend %[req.ssl_sni,lower,map_reg(os_tcp_be.map)] if sni sni_passthrough
  use_backend be_sni if sni
  default_backend be_no_sni

backend be_sni
  server fe_sni 127.0.0.1:10444 weight 1

frontend fe_sni
  bind 127.0.0.1:10444 ssl crt /home/aim/domain.pem crt-list cert_config.map
  mode http
  http-request del-header Proxy
  http-request set-header Host %[req.hdr(Host),lower]
  use_backend %[base,map_reg(os_edge_reencrypt_be.map)]
  default_backend openshift_default

backend be_no_sni
  server fe_no_sni 127.0.0.1:10443 weight 1

frontend fe_no_sni
  # terminate ssl on edge
  bind 127.0.0.1:10443 ssl crt /home/aim/domain.pem
  mode http
  http-request set-header Host %[req.hdr(Host),lower]
  use_backend %[base,map_reg(os_edge_reencrypt_be.map)]
  default_backend openshift_default

backend openshift_default
  mode http
  option forwardfor
  #option http-keep-alive
  option http-pretend-keepalive

backend be_edge_http:default:my-server
    mode http
    balance roundrobin
    option forwardfor
    option httpchk
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }
    server web01 127.0.0.1:9000 check
    server web02 127.0.0.1:9001 check
    server web03 127.0.0.1:9002 check
